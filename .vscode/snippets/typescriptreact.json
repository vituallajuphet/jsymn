{
  "React Native Functional Component Typescript": {
    "prefix": "rnfct",
    "body": [
      "import React, { FC, ReactElement} from 'react'",
      "import { View, Text } from 'react-native'",
      "",
      "const $0: FC = (): ReactElement => {",
      "",
      "  return (",
      "    <View>",
      "      <Text>$0</Text>",
      "    </View>",
      "  )",
      "}",
      "",
      "export default $0",
      ""
    ],
    "description": "React Native Functional Component Typescript"
  },
  "Platform Form Template": {
    "prefix": "platformft",
    "body": [
      "import React, { useEffect } from 'react';",
      "import { View, Text } from 'react-native';",
      "",
      "const Form$1 = props => {",
      "  const {",
      "    recordId,",
      "    temporaryData,",
      "    isEditMode,",
      "    onSetPrefetchParams,",
      "    onSetSaveParams,",
      "    onSetTemporaryData,",
      "  } = props;",
      "",
      "  useEffect(() => {",
      "    // Note: Add your custom prefetch params here",
      "      onSetPrefetchParams({",
      "      });",
      "  }, []);",
      "",
      "  //",
      "  useEffect(() => {",
      "      // Note: Add your custom save params here",
      "      onSetSaveParams({",
      "      })",
      "  }, [temporaryData]);",
      "",
      "  const handleChangeText = (key, text) => {",
      "    onSetTemporaryData(prev => {",
      "      return {",
      "        ...prev,",
      "        [key]: text,",
      "      };",
      "    });",
      "  };",
      "",
      "  if (isEditMode) {",
      "    return (",
      "      <View>",
      "        <Text>Form$1 - View Mode</Text>",
      "      </View>",
      "    )",
      "  }",
      "",
      "  return (",
      "    <View>",
      "      <Text>Form$1 - View Mode</Text>",
      "    </View>",
      "  );",
      "};",
      "",
      "export default Form$1;"
    ],
    "description": "description for Platform Form Template"
  }
}
